[{"/app/src/index.tsx":"1","/app/src/reportWebVitals.ts":"2","/app/src/common/i18n.ts":"3","/app/src/App.tsx":"4","/app/src/common/firebase.ts":"5","/app/src/contexts/SettingContext.tsx":"6","/app/src/contexts/AppContext.tsx":"7","/app/src/pages/Default.tsx":"8","/app/src/contexts/ListContext.tsx":"9","/app/src/hooks/useLocalStorage.ts":"10","/app/src/hooks/useAuth.ts":"11","/app/src/pages/AppLoading.tsx":"12","/app/src/pages/Home.tsx":"13","/app/src/pages/Login.tsx":"14","/app/src/pages/SignUp.tsx":"15","/app/src/pages/Setting.tsx":"16","/app/src/hooks/useAPI.ts":"17","/app/src/hooks/useClipboard.ts":"18","/app/src/hooks/useHotKeys.ts":"19","/app/src/components/AppFooter/index.tsx":"20","/app/src/components/ConfirmDialog/index.tsx":"21","/app/src/components/AppHeader/index.tsx":"22","/app/src/components/SnackBar/index.tsx":"23","/app/src/components/DrawerMenu/index.tsx":"24","/app/src/components/InfoDialog/index.tsx":"25","/app/src/components/EntryList/index.tsx":"26","/app/src/components/GroupSelect/index.tsx":"27","/app/src/components/GroupDialog/index.tsx":"28","/app/src/components/EntryDialog/index.tsx":"29","/app/src/components/FAB/index.tsx":"30","/app/src/components/GroupList/index.tsx":"31","/app/src/components/PasswordChangeForm/index.tsx":"32","/app/src/components/PasswordInput/index.tsx":"33","/app/src/components/OptionMenu/index.tsx":"34","/app/src/components/PasswordGenerator/index.tsx":"35","/app/src/components/EntryListItem/index.tsx":"36","/app/src/components/DrawerMenu/style.ts":"37"},{"size":522,"mtime":1630147923547,"results":"38","hashOfConfig":"39"},{"size":425,"mtime":1630147923549,"results":"40","hashOfConfig":"39"},{"size":383,"mtime":1630147923542,"results":"41","hashOfConfig":"39"},{"size":595,"mtime":1630147923541,"results":"42","hashOfConfig":"39"},{"size":283,"mtime":1630147923542,"results":"43","hashOfConfig":"39"},{"size":1901,"mtime":1630147923546,"results":"44","hashOfConfig":"39"},{"size":2093,"mtime":1630147923546,"results":"45","hashOfConfig":"39"},{"size":3278,"mtime":1630147923548,"results":"46","hashOfConfig":"39"},{"size":1598,"mtime":1630147923546,"results":"47","hashOfConfig":"39"},{"size":1281,"mtime":1630147923547,"results":"48","hashOfConfig":"39"},{"size":1787,"mtime":1630147923547,"results":"49","hashOfConfig":"39"},{"size":857,"mtime":1630147923548,"results":"50","hashOfConfig":"39"},{"size":3829,"mtime":1630147923548,"results":"51","hashOfConfig":"39"},{"size":5937,"mtime":1630147923549,"results":"52","hashOfConfig":"39"},{"size":2420,"mtime":1630147923549,"results":"53","hashOfConfig":"39"},{"size":6911,"mtime":1630147923549,"results":"54","hashOfConfig":"39"},{"size":4531,"mtime":1630147923546,"results":"55","hashOfConfig":"39"},{"size":596,"mtime":1630147923547,"results":"56","hashOfConfig":"39"},{"size":1301,"mtime":1630147923547,"results":"57","hashOfConfig":"39"},{"size":823,"mtime":1630147923542,"results":"58","hashOfConfig":"39"},{"size":1097,"mtime":1630147923542,"results":"59","hashOfConfig":"39"},{"size":2064,"mtime":1630147923542,"results":"60","hashOfConfig":"39"},{"size":824,"mtime":1630147923545,"results":"61","hashOfConfig":"39"},{"size":2817,"mtime":1633158493231,"results":"62","hashOfConfig":"39"},{"size":1058,"mtime":1630147923544,"results":"63","hashOfConfig":"39"},{"size":1332,"mtime":1630147923543,"results":"64","hashOfConfig":"39"},{"size":1099,"mtime":1630147923544,"results":"65","hashOfConfig":"39"},{"size":2028,"mtime":1630147923544,"results":"66","hashOfConfig":"39"},{"size":7668,"mtime":1630147923543,"results":"67","hashOfConfig":"39"},{"size":1629,"mtime":1630147923544,"results":"68","hashOfConfig":"39"},{"size":2032,"mtime":1630147923544,"results":"69","hashOfConfig":"39"},{"size":2628,"mtime":1630147923545,"results":"70","hashOfConfig":"39"},{"size":1232,"mtime":1630147923545,"results":"71","hashOfConfig":"39"},{"size":1466,"mtime":1630147923544,"results":"72","hashOfConfig":"39"},{"size":2748,"mtime":1630147923545,"results":"73","hashOfConfig":"39"},{"size":2868,"mtime":1630147923543,"results":"74","hashOfConfig":"39"},{"size":876,"mtime":1633158428400,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"33yojk",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.tsx",[],["153","154"],"/app/src/reportWebVitals.ts",[],"/app/src/common/i18n.ts",[],"/app/src/App.tsx",[],"/app/src/common/firebase.ts",[],"/app/src/contexts/SettingContext.tsx",[],"/app/src/contexts/AppContext.tsx",[],"/app/src/pages/Default.tsx",[],"/app/src/contexts/ListContext.tsx",[],"/app/src/hooks/useLocalStorage.ts",[],"/app/src/hooks/useAuth.ts",[],"/app/src/pages/AppLoading.tsx",[],"/app/src/pages/Home.tsx",["155"],"import React, { useEffect, useState, useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport * as MUI from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport EntryDialog from '../components/EntryDialog'\nimport GroupDialog from '../components/GroupDialog'\nimport EntryList from '../components/EntryList'\nimport GroupList from '../components/GroupList'\nimport GroupSelect from '../components/GroupSelect'\nimport FAB from '../components/FAB'\nimport { Entry } from '../common/Types'\nimport { ListContext } from '../contexts/ListContext'\nimport useHotkeys from '../hooks/useHotKeys'\nimport useClipboard from '../hooks/useClipboard'\nimport useAPI from '../hooks/useAPI'\n\nexport default function Home() {\n  const { entries, selectedEntry, selectedGroup } = useContext(ListContext)\n  const { copyPassword } = useClipboard()\n  const { fetchEntries, fetchGroups } = useAPI()\n\n  useEffect(() => {\n    fetchEntries()\n    fetchGroups()\n    // 無限ループになるので、空配列のままで\n  }, [])\n\n  const [searchText, setSearchText] = useState('')\n  const [sort, setSort] = useState<keyof Entry>('createdAt')\n\n  const visibleEntries = entries\n    .filter((e) => (selectedGroup ? e.group === selectedGroup.id : true))\n    .filter((e) => e.title.toLowerCase().includes(searchText))\n    .sort((a, b) => (a?.[sort] > b[sort] ? -1 : a[sort] < b[sort] ? 1 : 0))\n\n  useHotkeys([\n    {\n      sequence: 'command+c',\n      handler: () => selectedEntry && copyPassword(selectedEntry),\n    },\n  ])\n\n  const props = {\n    visibleEntries,\n    searchText,\n    sort,\n    onChangeSearchField: (value: string) => setSearchText(value),\n    onChangeSortSelect: (value: string) => setSort(value as keyof Entry),\n  }\n  return <View {...props}></View>\n}\n\nconst useStyles = makeStyles((theme) => ({\n  searchIcon: { margin: '18px 5px 0 0', color: 'gray' },\n  sortField: { marginTop: '14px' },\n  searchField: { width: '90%', margin: '0' },\n  createNew: { marginLeft: 'auto' },\n  noEntry: { color: 'gray', textAlign: 'center', marginTop: '2rem' },\n  nested: { paddingLeft: theme.spacing(4) },\n  card: { background: theme.palette.background.default },\n}))\n\ninterface ViewProps {\n  visibleEntries: Entry[]\n  searchText: string\n  sort: keyof Entry\n  onChangeSearchField: (value: string) => void\n  onChangeSortSelect: (value: string) => void\n}\n\nconst View: React.FC<ViewProps> = (props) => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <MUI.Container className=\"app-content\" maxWidth=\"md\">\n      <EntryDialog />\n      <GroupDialog />\n\n      <SearchIcon className={classes.searchIcon} />\n      <MUI.TextField\n        label={t('HOME.SEARCH')}\n        margin=\"dense\"\n        className={classes.searchField}\n        value={props.searchText}\n        onChange={({ target: { value } }) => props.onChangeSearchField(value)}\n      />\n\n      {/* <MUI.Select\n        className={classes.sortField}\n        label={t('HOME.SORT')}\n        value={props.sort}\n        onChange={({ target: { value } }) =>\n          props.onChangeSortSelect(value as string)\n        }\n      >\n        <MUI.MenuItem value=\"createdAt\">{t('HOME.CREATED_DATE')}</MUI.MenuItem>\n        <MUI.MenuItem value=\"updatedAt\">{t('HOME.UPDATE_DATE')}</MUI.MenuItem>\n      </MUI.Select> */}\n\n      <MUI.Grid container spacing={3}>\n        <MUI.Hidden smUp>\n          <MUI.Grid item xs={12}>\n            <GroupSelect />\n          </MUI.Grid>\n        </MUI.Hidden>\n\n        <MUI.Hidden xsDown>\n          <MUI.Grid item sm={3}>\n            <GroupList />\n          </MUI.Grid>\n        </MUI.Hidden>\n\n        <MUI.Grid item xs={12} sm={9}>\n          <EntryList entries={props.visibleEntries} />\n        </MUI.Grid>\n      </MUI.Grid>\n\n      <FAB />\n    </MUI.Container>\n  )\n}\n","/app/src/pages/Login.tsx",[],"/app/src/pages/SignUp.tsx",[],"/app/src/pages/Setting.tsx",["156"],"import React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport * as MUI from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { SettingContext } from '../contexts/SettingContext'\nimport useLocalStorage from '../hooks/useLocalStorage'\nimport PasswordChangeForm from '../components/PasswordChangeForm'\n\nconst useStyles = makeStyles(() => ({\n  select: { width: '120px' },\n}))\n\nconst TabPanel = ({ children, value, index, ...other }: any) => (\n  <div role=\"tabpanel\" {...other}>\n    {value === index && <MUI.Box>{children}</MUI.Box>}\n  </div>\n)\n\nconst Login: React.FC<{}> = () => {\n  const classes = useStyles()\n  // prettier-ignore\n  const { theme, setTheme, language, setLanguage, autoLock, setAutoLock, autoLockTime, setAutoLockTime,\n    passwordExpiration, setPasswordExpiration, daysToExpire, setDaysToExpire, } = useContext(SettingContext)\n  const { t, i18n } = useTranslation()\n  const [storage, setStorage] = useLocalStorage('USER_SETTING', {\n    theme,\n    language,\n    autoLock,\n    autoLockTime,\n    passwordExpiration,\n    daysToExpire,\n  })\n\n  const [tab, setTab] = React.useState(0)\n\n  function getGeoLocation() {\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        const lat = pos.coords.latitude //緯度を取得して定数latに代入\n        const lng = pos.coords.longitude //経度を取得して定数lngに代入\n        const accuracy = pos.coords.accuracy //同じく精度を定数accuracyに代入\n        console.log(lat, lng, accuracy)\n      },\n      () => {\n        window.alert('位置情報の取得に失敗しました。エラーコード：')\n      }\n    )\n  }\n\n  return (\n    <MUI.Container className=\"app-content\" maxWidth=\"md\">\n      <MUI.Box p={2} pt={5} pb={0}>\n        <MUI.Typography variant=\"h4\">{t('SETTING.SETTING')}</MUI.Typography>\n\n        <MUI.Tabs\n          value={tab}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          onChange={(_, value) => setTab(value)}\n        >\n          <MUI.Tab label={t('SETTING.GENERAL')} />\n          <MUI.Tab label={t('SETTING.SECURITY')} />\n        </MUI.Tabs>\n      </MUI.Box>\n\n      <TabPanel value={tab} index={0}>\n        <MUI.List>\n          <MUI.ListSubheader>UI</MUI.ListSubheader>\n          {/* テーマ */}\n          <MUI.ListItem>\n            <MUI.ListItemText>{t('SETTING.THEME')}</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.Select\n                className={classes.select}\n                value={theme}\n                onChange={({ target: { value } }) => {\n                  const theme = value as 'light' | 'dark'\n                  setTheme(theme)\n                  setStorage({ ...storage, theme })\n                }}\n              >\n                <MUI.MenuItem value=\"light\">Light</MUI.MenuItem>\n                <MUI.MenuItem value=\"dark\">Dark</MUI.MenuItem>\n              </MUI.Select>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n          {/* 言語 */}\n          <MUI.ListItem>\n            <MUI.ListItemText>{t('SETTING.LANGUAGE')}</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.Select\n                className={classes.select}\n                value={language}\n                onChange={({ target: { value } }) => {\n                  const language = value as string\n                  setLanguage(language)\n                  i18n.changeLanguage(language)\n                  setStorage({ ...storage, language })\n                }}\n              >\n                <MUI.MenuItem value=\"ja\">{t('SETTING.JAPANESE')}</MUI.MenuItem>\n                <MUI.MenuItem value=\"en\">{t('SETTING.ENGLISH')}</MUI.MenuItem>\n              </MUI.Select>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n        </MUI.List>\n        <MUI.Divider style={{ marginTop: '2rem' }} />\n        <PasswordChangeForm />\n      </TabPanel>\n\n      <TabPanel value={tab} index={1}>\n        <MUI.List>\n          <MUI.ListSubheader>{t('SETTING.AUTO_LOCK')}</MUI.ListSubheader>\n\n          {/* 自動ロック */}\n          <MUI.ListItem>\n            <MUI.ListItemText>有効 / 無効</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.Switch\n                color=\"primary\"\n                checked={autoLock}\n                onChange={({ target: { checked } }) => {\n                  setAutoLock(checked)\n                  setStorage({ ...storage, autoLock: checked })\n                }}\n              ></MUI.Switch>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n\n          {/* 自動ロックまでの秒数 */}\n          <MUI.ListItem>\n            <MUI.ListItemText>自動ロックまでの時間</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.TextField\n                type=\"number\"\n                label=\"time (sec)\"\n                defaultValue=\"300\"\n                inputProps={{ min: 0 }}\n                disabled={!autoLock}\n                onChange={({ target: { value } }) => {\n                  const autoLockTime = Number(value)\n                  setAutoLockTime(autoLockTime)\n                  setStorage({ ...storage, autoLockTime })\n                }}\n              ></MUI.TextField>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n\n          <MUI.Divider style={{ marginTop: '2rem' }} />\n\n          <MUI.ListSubheader>\n            {t('SETTING.PASSWORD_EXPIRATION')}\n          </MUI.ListSubheader>\n\n          {/* パスワード有効期限 */}\n          <MUI.ListItem>\n            <MUI.ListItemText>有効 / 無効</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.Switch\n                color=\"primary\"\n                checked={passwordExpiration}\n                onChange={({ target: { checked } }) => {\n                  setPasswordExpiration(checked)\n                  setStorage({ ...storage, passwordExpiration: checked })\n                }}\n              ></MUI.Switch>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n\n          {/* 期限切れまでの日数 */}\n          <MUI.ListItem>\n            <MUI.ListItemText>{t('SETTING.DAYS_TO_EXPIRE')}</MUI.ListItemText>\n            <MUI.ListItemSecondaryAction>\n              <MUI.TextField\n                type=\"number\"\n                label=\"Days\"\n                defaultValue=\"180\"\n                inputProps={{ min: 0 }}\n                disabled={!passwordExpiration}\n                onChange={({ target: { value } }) => {\n                  const daysToExpire = Number(value)\n                  setDaysToExpire(daysToExpire)\n                  setStorage({ ...storage, daysToExpire })\n                }}\n              ></MUI.TextField>\n            </MUI.ListItemSecondaryAction>\n          </MUI.ListItem>\n        </MUI.List>\n      </TabPanel>\n    </MUI.Container>\n  )\n}\n\nexport default Login\n","/app/src/hooks/useAPI.ts",[],"/app/src/hooks/useClipboard.ts",[],"/app/src/hooks/useHotKeys.ts",[],"/app/src/components/AppFooter/index.tsx",[],"/app/src/components/ConfirmDialog/index.tsx",[],"/app/src/components/AppHeader/index.tsx",[],"/app/src/components/SnackBar/index.tsx",[],"/app/src/components/DrawerMenu/index.tsx",[],"/app/src/components/InfoDialog/index.tsx",[],"/app/src/components/EntryList/index.tsx",[],"/app/src/components/GroupSelect/index.tsx",[],"/app/src/components/GroupDialog/index.tsx",[],"/app/src/components/EntryDialog/index.tsx",[],"/app/src/components/FAB/index.tsx",[],"/app/src/components/GroupList/index.tsx",[],"/app/src/components/PasswordChangeForm/index.tsx",[],"/app/src/components/PasswordInput/index.tsx",[],"/app/src/components/OptionMenu/index.tsx",[],"/app/src/components/PasswordGenerator/index.tsx",[],"/app/src/components/EntryListItem/index.tsx",[],"/app/src/components/DrawerMenu/style.ts",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":28,"column":6,"nodeType":"163","endLine":28,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":38,"column":12,"nodeType":"167","messageId":"168","endLine":38,"endColumn":26},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchEntries' and 'fetchGroups'. Either include them or remove the dependency array.","ArrayExpression",["171"],"@typescript-eslint/no-unused-vars","'getGeoLocation' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},"Update the dependencies array to be: [fetchEntries, fetchGroups]",{"range":"174","text":"175"},[1060,1062],"[fetchEntries, fetchGroups]"]